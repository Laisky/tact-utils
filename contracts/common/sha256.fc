int sha256(slice data) impure asm """
    1 PUSHINT      // pusing the counter of the references to the stack
                   // s0 - counter, s1 - slice
    WHILE:<{
        OVER       // copying the last slice to the top of the stack
                   // s0 - slice (copy), s1 - counter, s2 - slice
        SREFS      // counting the refs in the slice s0 and putting it (the counter) to s0
                   // s0 - number (of refs), s1 - counter, s2 - slice
        0 NEQINT   // comparing the number or refs, if 0 then exit the loop
                   // s0 - bool, s1 - counter, s2 - slice
    }>DO<{
                   // s0 - counter, s1 - slice
        OVER       // copying the slice from s1 to the top of the stack (to s0)
                   // s0 - slice, s1 - counter, s2 - slice
        LDREF      // loading the reference, from s0 (the original data variable/last stack element), not s0 - original, s1 - result
                   // s0 - slice, s1 - cell (ref), s2 - counter, s3 - slice
        s0 POP     // removing the original slice from the stack (we don't need it anymore, only ref needed)
                   // s0 - cell (ref), s1 - counter, s2 - slice
        CTOS       // convert s0 the cell to slice (still in s0)
                   // s0 - slice (ref), s1 - counter, s2 - slice
        s0 s1 XCHG // putting to s1 the value of current slice (it was in s0 prev), and counter to s0
                   // s0 - counter, s1 - slice (ref), s2 - slice
        INC        // increment the counter (in s0)
    }>

    HASHEXT_SHA256 // call the sha256 function
""";
